<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>java测试</title>
    <url>/2020/04/10/java/java%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>字典树的实现：c-p299<br>实现字典树，并实现,假设字符都是a到z<br>insert，添加word，可以重复添加<br>delete 删除word，如果word有多个，仅删除一个<br>search 查询word是否在字典中<br>prefixNumber：返回以字符串pre为前缀的单词数量</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tire</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> wordCount;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isWord;</span><br><span class="line">    <span class="keyword">private</span> Tire[] table = <span class="keyword">new</span> Tire[<span class="number">26</span>];</span><br><span class="line"></span><br><span class="line">    Tire()&#123;</span><br><span class="line">        isWord = <span class="keyword">false</span>;</span><br><span class="line">        wordCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(String word)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] s = word.toCharArray();</span><br><span class="line">        Tire cur = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> index = s[i]-<span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">if</span>(cur.table[index]==<span class="keyword">null</span>)&#123;</span><br><span class="line">                cur.table[index] = <span class="keyword">new</span> Tire();</span><br><span class="line">            &#125;</span><br><span class="line">            cur = cur.table[index];</span><br><span class="line">            <span class="keyword">if</span>(i==s.length-<span class="number">1</span>)&#123;</span><br><span class="line">                cur.isWord = <span class="keyword">true</span>;</span><br><span class="line">                cur.wordCount++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(String word)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] s = word.toCharArray();</span><br><span class="line">        Tire cur = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> index = s[i]-<span class="string">'a'</span>;</span><br><span class="line">            cur = cur.table[index];</span><br><span class="line">            <span class="keyword">if</span>(i==s.length-<span class="number">1</span>)&#123;</span><br><span class="line">                cur.wordCount = Math.max(cur.wordCount-<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">                cur.isWord = cur.wordCount!=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">search</span><span class="params">(String word)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] s = word.toCharArray();</span><br><span class="line">        Tire cur = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> index = s[i]-<span class="string">'a'</span>;</span><br><span class="line">            cur = cur.table[index];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur.isWord;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">prefixNumber</span><span class="params">(String pre)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] s = pre.toCharArray();</span><br><span class="line">        Tire cur = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> index = s[i]-<span class="string">'a'</span>;</span><br><span class="line">            cur = cur.table[index];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> findWord(cur);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">findWord</span><span class="params">(Tire root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> res = root.wordCount;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            res += findWord(root.table[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>dadadasd<br>dadad</p>
<h2 id="dasda"><a href="#dasda" class="headerlink" title="dasda"></a>dasda</h2><p>dsadasegf<br>d</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br></pre></td></tr></table></figure>

<p>zccxzcca</p>
<p>adsdas</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
</search>
